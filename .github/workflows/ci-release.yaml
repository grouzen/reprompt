name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  CARGO_TERM_COLOR: always
permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            use-cross: false
            target: x86_64-unknown-linux-gnu
        #   - build: linux-aarch64
        #     os: ubuntu-latest
        #     use-cross: true
        #     target: aarch64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            use-cross: false
            target: x86_64-apple-darwin
          - build: -macos-aarch64
            os: macos-latest
            use-cross: false
            target: aarch64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install OpenSSL development libraries
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y pkg-config libssl-dev
          else
            brew install openssl@3
          fi

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install cross
        if: matrix.use-cross
        uses: taiki-e/install-action@v2
        with:
         tool: cross

      - uses: moonrepo/setup-rust@v1
        with:
          targets: ${{ matrix.target }}

      - name: Build (without cross)
        if: "!matrix.use-cross"
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Build (cross)
        if: matrix.use-cross
        run: cross build --release --locked --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          binary_name="ollana"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET }}
